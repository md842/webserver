steps:
  # Install npm dependencies
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']
    dir: 'frontend'

  # Build npm frontend
  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    dir: 'frontend'
    id: 'frontend'

  # Pull cached base image
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker pull gcr.io/$PROJECT_ID/webserver:base || exit 0']

  # Build base image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'docker/base.Dockerfile',
      '-t', 'webserver:base',
      '-t', 'gcr.io/$PROJECT_ID/webserver:base',
      '--cache-from', 'gcr.io/$PROJECT_ID/webserver:base',
      '.'
    ]
    id: 'base'

  # Build build image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'docker/build.Dockerfile',
      '-t', 'webserver:build',
      '.'
    ]
    id: 'build'

  # Build coverage image. Integration test relies on build step completion.
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'docker/coverage.Dockerfile',
      '.'
    ]
    waitFor: ['build', 'frontend'] # Some tests rely on frontend being built

  # Build deploy image. May run concurrently with coverage step.
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'docker/deploy.Dockerfile',
      '-t', 'gcr.io/$PROJECT_ID/webserver:latest',
      '.'
    ]
    waitFor: ['build', 'frontend'] # Cannot deploy without frontend

# Push base and deploy image to artifact registry
images: ['gcr.io/$PROJECT_ID/webserver:base', 'gcr.io/$PROJECT_ID/webserver:latest']

# Cloud build options
serviceAccount: "464336319665-compute@developer.gserviceaccount.com"
options:
  logging: CLOUD_LOGGING_ONLY